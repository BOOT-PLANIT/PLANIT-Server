<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planit.planit.domain.session.mapper.SessionMapper">

    <!-- 전체 조회 -->
    <select id="findAll" resultType="com.planit.planit.domain.session.dto.SessionDTO">
        SELECT s.id, s.bootcamp_id as "bootcampId", s.period_id as "periodId",
               up.unit_no as "unitNo",
               up.start_date as "periodStartDate",
               up.end_date as "periodEndDate",
               s.class_date as "classDate", s.created_at as "createdAt", s.updated_at as "updatedAt"
        FROM sessions s
        LEFT JOIN unit_periods up ON s.period_id = up.id
        ORDER BY s.class_date ASC
    </select>

    <!-- 부트캠프별 조회 -->
    <select id="findByBootcampId" parameterType="long" resultType="com.planit.planit.domain.session.dto.SessionDTO">
        SELECT s.id, s.bootcamp_id as "bootcampId", s.period_id as "periodId",
               up.unit_no as "unitNo",
               up.start_date as "periodStartDate",
               up.end_date as "periodEndDate",
               s.class_date as "classDate", s.created_at as "createdAt", s.updated_at as "updatedAt"
        FROM sessions s
        LEFT JOIN unit_periods up ON s.period_id = up.id
        WHERE s.bootcamp_id = #{bootcampId}
        ORDER BY s.class_date ASC
    </select>

    <!-- 단일 조회 -->
    <select id="findById" parameterType="long" resultType="com.planit.planit.domain.session.dto.SessionDTO">
        SELECT s.id, s.bootcamp_id as "bootcampId", s.period_id as "periodId",
               up.unit_no as "unitNo",
               up.start_date as "periodStartDate",
               up.end_date as "periodEndDate",
               s.class_date as "classDate", s.created_at as "createdAt", s.updated_at as "updatedAt"
        FROM sessions s
        LEFT JOIN unit_periods up ON s.period_id = up.id
        WHERE s.id = #{id}
    </select>

    <!-- 부트캠프별 최소 교육일 조회 (비관적 락 - 행 단위) -->
    <select id="findMinClassDateByBootcampIdForUpdate" parameterType="long" resultType="java.time.LocalDate">
        SELECT class_date
        FROM sessions
        WHERE bootcamp_id = #{bootcampId}
        ORDER BY class_date ASC
        LIMIT 1
        FOR UPDATE
    </select>

    <!-- 단일 추가 -->
    <insert id="insert" parameterType="com.planit.planit.domain.session.dto.SessionDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sessions (bootcamp_id, period_id, class_date, created_at, updated_at)
        VALUES (#{bootcampId}, #{periodId}, #{classDate}, NOW(), NOW())
    </insert>

    <!-- 일괄 추가 -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO sessions (bootcamp_id, period_id, class_date, created_at, updated_at)
        VALUES
        <foreach collection="list" item="session" separator=",">
            (#{session.bootcampId}, #{session.periodId}, #{session.classDate}, NOW(), NOW())
        </foreach>
    </insert>

    <!-- 단일 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM sessions WHERE id = #{id}
    </delete>

    <!-- 부트캠프별 삭제 -->
    <delete id="deleteByBootcampId" parameterType="long">
        DELETE FROM sessions WHERE bootcamp_id = #{bootcampId}
    </delete>

</mapper>